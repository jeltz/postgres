--
-- EACH ELEMENT FOREIGN KEY CONSTRAINTS
--
CREATE TABLE pk_table (
  a int PRIMARY KEY
);
CREATE TABLE fk_table (
  a int[]
);
INSERT INTO pk_table VALUES (1);
INSERT INTO pk_table VALUES (2);
INSERT INTO pk_table VALUES (3);
INSERT INTO pk_table VALUES (4);
INSERT INTO pk_table VALUES (5);
-- ok - check alter table no rows
ALTER TABLE fk_table ADD CONSTRAINT fk_name FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table;
ALTER TABLE fk_table DROP CONSTRAINT fk_name;
-- ok - check alter table with rows
INSERT INTO fk_table VALUES ('{1}');
INSERT INTO fk_table VALUES ('{2,3,4,5}');
ALTER TABLE fk_table ADD CONSTRAINT fk_name FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table;
ALTER TABLE fk_table DROP CONSTRAINT fk_name;
-- fail - check alter table with failing rows
INSERT INTO fk_table VALUES ('{6}');
ALTER TABLE fk_table ADD CONSTRAINT fk_name FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table;
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_name"
DETAIL:  Key (a)=({6}) is not present in table "pk_table".
DROP TABLE fk_table;
-- ok - check create table
CREATE TABLE fk_table (
  a int[],
  b int,
  FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table
);
-- ok - check create table with multi dimensional column
CREATE TABLE fk_table_multi_dim (
  a int[][],
  b int,
  FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table
);
-- ok - check create table with not null
CREATE TABLE fk_table_not_null (
  a int[] NOT NULL,
  b int,
  FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table
);
-- ok
INSERT INTO fk_table VALUES ('{1}', 3);
INSERT INTO fk_table VALUES ('{2}', 4);
INSERT INTO fk_table VALUES ('{1}', 5);
INSERT INTO fk_table VALUES ('{3}', 6);
INSERT INTO fk_table VALUES ('{1}', 7);
INSERT INTO fk_table VALUES ('{4,5}', 8);
INSERT INTO fk_table VALUES ('{4,4}', 9);
INSERT INTO fk_table VALUES (NULL, 10);
INSERT INTO fk_table VALUES ('{}', 11);
INSERT INTO fk_table VALUES ('{1,NULL}', 12);
INSERT INTO fk_table VALUES ('{NULL}', 13);
INSERT INTO fk_table_multi_dim VALUES ('{{4,5},{1,2},{1,3}}', 14);
INSERT INTO fk_table_multi_dim VALUES ('{{4,5},{NULL,2},{NULL,3}}', 15);
-- fail
INSERT INTO fk_table VALUES ('{6}', 16);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_fkey"
DETAIL:  Key (a)=({6}) is not present in table "pk_table".
INSERT INTO fk_table VALUES ('{4,6}', 17);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_fkey"
DETAIL:  Key (a)=({4,6}) is not present in table "pk_table".
INSERT INTO fk_table VALUES ('{6,NULL}', 18);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_fkey"
DETAIL:  Key (a)=({6,NULL}) is not present in table "pk_table".
INSERT INTO fk_table VALUES ('{6,NULL,4,NULL}', 19);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_fkey"
DETAIL:  Key (a)=({6,NULL,4,NULL}) is not present in table "pk_table".
INSERT INTO fk_table_multi_dim VALUES ('{{1,2},{6,NULL}}', 20);
ERROR:  insert or update on table "fk_table_multi_dim" violates foreign key constraint "fk_table_multi_dim_a_fkey"
DETAIL:  Key (a)=({{1,2},{6,NULL}}) is not present in table "pk_table".
INSERT INTO fk_table_not_null VALUES (NULL, 21);
ERROR:  null value in column "a" of relation "fk_table_not_null" violates not-null constraint
DETAIL:  Failing row contains (null, 21).
SELECT * FROM fk_table ORDER BY a,b;
    a     | b  
----------+----
 {}       | 11
 {1}      |  3
 {1}      |  5
 {1}      |  7
 {1,NULL} | 12
 {2}      |  4
 {3}      |  6
 {4,4}    |  9
 {4,5}    |  8
 {NULL}   | 13
          | 10
(11 rows)

-- fail
DELETE FROM pk_table WHERE a=1;
ERROR:  update or delete on table "pk_table" violates foreign key constraint "fk_table_a_fkey" on table "fk_table"
DETAIL:  Key (a)=(1) is still referenced from table "fk_table".
-- fail
UPDATE pk_table SET a=7 WHERE a=1;
ERROR:  update or delete on table "pk_table" violates foreign key constraint "fk_table_a_fkey" on table "fk_table"
DETAIL:  Key (a)=(1) is still referenced from table "fk_table".
-- ok
UPDATE fk_table SET a='{1}' WHERE b=4;
SELECT * FROM fk_table ORDER BY a,b;
    a     | b  
----------+----
 {}       | 11
 {1}      |  3
 {1}      |  4
 {1}      |  5
 {1}      |  7
 {1,NULL} | 12
 {3}      |  6
 {4,4}    |  9
 {4,5}    |  8
 {NULL}   | 13
          | 10
(11 rows)

DROP TABLE fk_table;
DROP TABLE fk_table_not_null;
DROP TABLE fk_table_multi_dim;
-- allowed references with actions (NO ACTION, RESTRICT)
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE NO ACTION ON UPDATE NO ACTION, b int);
DROP TABLE fk_table;
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE NO ACTION ON UPDATE RESTRICT, b int);
DROP TABLE fk_table;
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE RESTRICT ON UPDATE NO ACTION, b int);
DROP TABLE fk_table;
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE RESTRICT ON UPDATE RESTRICT, b int);
DROP TABLE fk_table;
-- fail - not allowed references (SET NULL, SET DEFAULT, CASCADE)
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE NO ACTION ON UPDATE SET NULL, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE NO ACTION ON UPDATE SET DEFAULT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE NO ACTION ON UPDATE CASCADE, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE RESTRICT ON UPDATE SET NULL, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE RESTRICT ON UPDATE SET DEFAULT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE RESTRICT ON UPDATE CASCADE, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET NULL ON UPDATE NO ACTION, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET NULL ON UPDATE RESTRICT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET NULL ON UPDATE SET NULL, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET NULL ON UPDATE SET DEFAULT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET NULL ON UPDATE CASCADE, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE CASCADE ON UPDATE NO ACTION, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE CASCADE ON UPDATE RESTRICT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE CASCADE ON UPDATE SET NULL, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE CASCADE ON UPDATE SET DEFAULT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE CASCADE ON UPDATE CASCADE, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET DEFAULT ON UPDATE NO ACTION, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET DEFAULT ON UPDATE RESTRICT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET DEFAULT ON UPDATE SET NULL, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET DEFAULT ON UPDATE SET DEFAULT, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
CREATE TABLE fk_table (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table ON DELETE SET DEFAULT ON UPDATE CASCADE, b int);
ERROR:  Array Element Foreign Keys support only NO ACTION and RESTRICT actions
DROP TABLE IF EXISTS fk_table;
NOTICE:  table "fk_table" does not exist, skipping
DROP TABLE pk_table;
-- check reference on empty table
CREATE TABLE pk_table (a int PRIMARY KEY);
CREATE TABLE fk_table  (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table);
INSERT INTO fk_table VALUES ('{}');
DROP TABLE fk_table;
DROP TABLE pk_table;
--
-- test multi-column primary keys
--
CREATE TABLE pk_table (
  a text,
  b text,
  PRIMARY KEY (a, b)
);
INSERT INTO pk_table (a, b) VALUES ('foo', 'foo');
INSERT INTO pk_table (a, b) VALUES ('foo', 'bar');
INSERT INTO pk_table (a, b) VALUES ('bar', 'baz');
CREATE TABLE fk_table (
  a text,
  b text[],
  FOREIGN KEY (a, EACH ELEMENT OF b) REFERENCES pk_table
);
-- ok
INSERT INTO fk_table (a, b) VALUES ('foo', ARRAY['foo','bar']);
INSERT INTO fk_table (a, b) VALUES ('bar', ARRAY['baz']);
-- fail
INSERT INTO fk_table (a, b) VALUES ('foo', ARRAY['foo','bar', 'baz']);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_b_fkey"
DETAIL:  Key (a, b)=(foo, {foo,bar,baz}) is not present in table "pk_table".
INSERT INTO fk_table (a, b) VALUES ('bar', ARRAY['foo']);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_b_fkey"
DETAIL:  Key (a, b)=(bar, {foo}) is not present in table "pk_table".
DROP TABLE fk_table;
DROP TABLE pk_table;
--
-- test composite type primary key
--
CREATE TYPE invoiceid AS (year_part int, progressive_part int);
CREATE TABLE pk_table (id invoiceid PRIMARY KEY, b text);
INSERT INTO pk_table (id, b) VALUES (ROW(2010, 99), 'Last invoice for 2010');
INSERT INTO pk_table (id, b) VALUES (ROW(2011, 1), 'First invoice for 2011');
INSERT INTO pk_table (id, b) VALUES (ROW(2011, 2), 'Second invoice for 2011');
CREATE TABLE fk_table (
  id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
  invoice_ids invoiceid[],
  b TEXT,
  PRIMARY KEY (id),
  FOREIGN KEY (EACH ELEMENT OF invoice_ids) REFERENCES pk_table
);
-- ok
INSERT INTO fk_table (invoice_ids, b) VALUES (ARRAY['(2010,99)']::invoiceid[], 'Product A');
INSERT INTO fk_table (invoice_ids, b) VALUES (ARRAY['(2011,1)','(2011,2)']::invoiceid[], 'Product B');
INSERT INTO fk_table (invoice_ids, b) VALUES (ARRAY['(2011,2)']::invoiceid[], 'Product C');
-- fail
INSERT INTO fk_table (invoice_ids, b) VALUES (ARRAY['(2011,99)']::invoiceid[], 'Product A');
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_invoice_ids_fkey"
DETAIL:  Key (invoice_ids)=({"(2011,99)"}) is not present in table "pk_table".
INSERT INTO fk_table (invoice_ids, b) VALUES (ARRAY['(2011,1)','(2010,1)']::invoiceid[], 'Product B');
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_invoice_ids_fkey"
DETAIL:  Key (invoice_ids)=({"(2011,1)","(2010,1)"}) is not present in table "pk_table".
SELECT * FROM fk_table;
 id |       invoice_ids       |     b     
----+-------------------------+-----------
  1 | {"(2010,99)"}           | Product A
  2 | {"(2011,1)","(2011,2)"} | Product B
  3 | {"(2011,2)"}            | Product C
(3 rows)

DELETE FROM pk_table WHERE id=ROW(2010,99);
ERROR:  update or delete on table "pk_table" violates foreign key constraint "fk_table_invoice_ids_fkey" on table "fk_table"
DETAIL:  Key (id)=((2010,99)) is still referenced from table "fk_table".
SELECT * FROM fk_table;
 id |       invoice_ids       |     b     
----+-------------------------+-----------
  1 | {"(2010,99)"}           | Product A
  2 | {"(2011,1)","(2011,2)"} | Product B
  3 | {"(2011,2)"}            | Product C
(3 rows)

UPDATE pk_table SET id=ROW(2011,99) WHERE id=ROW(2011,1);
ERROR:  update or delete on table "pk_table" violates foreign key constraint "fk_table_invoice_ids_fkey" on table "fk_table"
DETAIL:  Key (id)=((2011,1)) is still referenced from table "fk_table".
SELECT * FROM fk_table;
 id |       invoice_ids       |     b     
----+-------------------------+-----------
  1 | {"(2010,99)"}           | Product A
  2 | {"(2011,1)","(2011,2)"} | Product B
  3 | {"(2011,2)"}            | Product C
(3 rows)

DROP TABLE fk_table;
DROP TABLE pk_table;
DROP TYPE invoiceid;
--
-- test array primary key
--
CREATE TABLE pk_table (
  a int[] PRIMARY KEY,
  x text
);
CREATE TABLE fk_table (
  b int NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  a int[] REFERENCES pk_table,
  x text
);
INSERT INTO pk_table VALUES ('{1,1}', 'A');
INSERT INTO pk_table VALUES ('{1,2}', 'B');
-- ok
INSERT INTO fk_table (a, x) VALUES ('{1,1}', 'Product A');
INSERT INTO fk_table (a, x) VALUES ('{1,2}', 'Product B');
-- fail
INSERT INTO fk_table (a, x) VALUES ('{0,1}', 'Product C');
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_fkey"
DETAIL:  Key (a)=({0,1}) is not present in table "pk_table".
INSERT INTO fk_table (a, x) VALUES ('{2,1}', 'Product D');
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_fkey"
DETAIL:  Key (a)=({2,1}) is not present in table "pk_table".
DROP TABLE fk_table;
DROP TABLE pk_table;
--
-- multi-column primary key
--
CREATE TABLE pk_table (
  a int NOT NULL,
  b int NOT NULL,
  PRIMARY KEY (a, b)
);
INSERT INTO pk_table
  SELECT
    a.t,
    a.t * b.t
  FROM
  (
    SELECT generate_series(1, 10) AS t
  ) a
  CROSS JOIN
  (
    SELECT generate_series(0, 10) AS t
  ) b;
--
-- multi-column foreign key
-- CREATE TABLE
--
CREATE TABLE fk_table (
	a int PRIMARY KEY,
  b int[],
	FOREIGN KEY (a, EACH ELEMENT OF b) REFERENCES pk_table(a, b)
);
-- ok
INSERT INTO fk_table VALUES (1, '{0,1,2,3,4,5}');
INSERT INTO fk_table VALUES (2, '{0,2,4,6}');
INSERT INTO fk_table VALUES (3, '{0,3,6,9,0,3,6,9,0,0,0,0,9,9}');
INSERT INTO fk_table VALUES (4, '{0,NULL,4}');
INSERT INTO fk_table VALUES (5, '{0,NULL,5}');
UPDATE fk_table SET b = '{0,2,4,6}' WHERE a = 2;
UPDATE fk_table SET b = '{0,4,8}' WHERE a = 4;
UPDATE fk_table SET b = '{0,5,NULL,10}' WHERE a = 5;
-- fail
INSERT INTO fk_table VALUES (4, '{0,2,4}');
ERROR:  duplicate key value violates unique constraint "fk_table_pkey"
DETAIL:  Key (a)=(4) already exists.
UPDATE fk_table SET b = '{0,2,3,4,6}' WHERE a = 2;
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_b_fkey"
DETAIL:  Key (a, b)=(2, {0,2,3,4,6}) is not present in table "pk_table".
UPDATE fk_table SET a = 20, b = '{0,2,3,4,6}' WHERE a = 2;
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_b_fkey"
DETAIL:  Key (a, b)=(20, {0,2,3,4,6}) is not present in table "pk_table".
DROP TABLE fk_table;
--
-- multi-column foreign key
-- ALTER TABLE ... ADD FOREIGN KEY
--
CREATE TABLE fk_table (
	a int PRIMARY KEY,
  b int[]
);
-- ok
INSERT INTO fk_table VALUES (1, '{0,1,2,3,4,5}');
INSERT INTO fk_table VALUES (2, '{0,2,4,6}');
INSERT INTO fk_table VALUES (3, '{0,3,6,9,0,3,6,9,0,0,0,0,9,9}');
INSERT INTO fk_table VALUES (5, '{0,NULL,5}');
-- ok since no foreign key yet
INSERT INTO fk_table VALUES (4, '{0,2,4}');
-- fail
ALTER TABLE fk_table ADD FOREIGN KEY (a, EACH ELEMENT OF b) REFERENCES pk_table(a, b);
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_a_b_fkey"
DETAIL:  Key (a, b)=(4, {0,2,4}) is not present in table "pk_table".
DROP TABLE fk_table;
--
-- multiple EACH ELEMENT OF unsupported
--
CREATE TABLE fk_table (
	a int[],
  b int[],
  PRIMARY KEY (a),
	FOREIGN KEY (EACH ELEMENT OF a, EACH ELEMENT OF b) REFERENCES pk_table(a, b)
);
ERROR:  foreign keys support only one array column
CREATE TABLE fk_table (
	a int[],
  b int[],
  PRIMARY KEY (a)
);
INSERT INTO fk_table VALUES ('{1}', '{0,1,2,3,4,5}');
INSERT INTO fk_table VALUES ('{1,2}', '{0,2,4,6}');
ALTER TABLE fk_table ADD FOREIGN KEY (EACH ELEMENT OF a, EACH ELEMENT OF b) REFERENCES pk_table(a, b);
ERROR:  foreign keys support only one array column
DROP TABLE fk_table;
DROP TABLE pk_table;
--
-- multi-dimensional array FOREIGN KEY
--
CREATE TABLE pk_table (a int NOT NULL PRIMARY KEY);
INSERT INTO pk_table (a) SELECT generate_series(1, 10);
CREATE TABLE fk_table (
	id int GENERATED ALWAYS AS IDENTITY,
	slots int[3][3],
  PRIMARY KEY (id),
  CONSTRAINT slots_fk FOREIGN KEY (EACH ELEMENT OF slots) REFERENCES pk_table
);
-- ok
INSERT INTO fk_table (slots) VALUES ('{{NULL, 1, NULL}, {NULL, NULL, 3}, {NULL, NULL, 6}}');
INSERT INTO fk_table (slots) VALUES ('{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}');
INSERT INTO fk_table (slots) VALUES ('{1, 2, 3, 4, 5, 6, 7, 8, 9}');
UPDATE fk_table SET slots = '{{NULL, 1, NULL}, {NULL, NULL, 3}, {7, 8, 10}}' WHERE id = 1;
-- fail
INSERT INTO fk_table (slots) VALUES ('{{NULL, 1, NULL}, {NULL, NULL, 11}, {NULL, NULL, 6}}');
ERROR:  insert or update on table "fk_table" violates foreign key constraint "slots_fk"
DETAIL:  Key (slots)=({{NULL,1,NULL},{NULL,NULL,11},{NULL,NULL,6}}) is not present in table "pk_table".
UPDATE fk_table SET slots = '{{100, 100, 100}, {NULL, NULL, 20}, {7, 8, 10}}' WHERE id = 1;
ERROR:  insert or update on table "fk_table" violates foreign key constraint "slots_fk"
DETAIL:  Key (slots)=({{100,100,100},{NULL,NULL,20},{7,8,10}}) is not present in table "pk_table".
-- test with postponed foreign key
ALTER TABLE fk_table DROP CONSTRAINT slots_fk;
-- ok since no foreign key
INSERT INTO fk_table (slots) VALUES ('{{NULL, 1, NULL}, {NULL, NULL, 11}, {NULL, NULL, 6}}');
-- fail
ALTER TABLE fk_table ADD FOREIGN KEY (EACH ELEMENT OF slots) REFERENCES pk_table;
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_slots_fkey"
DETAIL:  Key (slots)=({{NULL,1,NULL},{NULL,NULL,11},{NULL,NULL,6}}) is not present in table "pk_table".
-- remove issue
DELETE FROM fk_table WHERE slots = '{{NULL, 1, NULL}, {NULL, NULL, 11}, {NULL, NULL, 6}}';
-- ok
ALTER TABLE fk_table ADD FOREIGN KEY (EACH ELEMENT OF slots) REFERENCES pk_table;
-- fail
INSERT INTO fk_table (slots) VALUES ('{{NULL, 1, NULL}, {NULL, NULL, 11}, {NULL, NULL, 6}}');
ERROR:  insert or update on table "fk_table" violates foreign key constraint "fk_table_slots_fkey"
DETAIL:  Key (slots)=({{NULL,1,NULL},{NULL,NULL,11},{NULL,NULL,6}}) is not present in table "pk_table".
DROP TABLE fk_table;
-- leave tables in the database
CREATE TABLE pk_table_violating (a int PRIMARY KEY, b text);
CREATE TABLE fk_table_violating (a int[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
-- check ALTER TABLE ALTER TYPE
ALTER TABLE fk_table_violating ALTER a TYPE int[];
-- check GIN index
CREATE TABLE pk_table_gin (a int PRIMARY KEY, b text);
INSERT INTO pk_table_gin VALUES (1, 'Test1');
INSERT INTO pk_table_gin VALUES (2, 'Test2');
INSERT INTO pk_table_gin VALUES (3, 'Test3');
INSERT INTO pk_table_gin VALUES (4, 'Test4');
INSERT INTO pk_table_gin VALUES (5, 'Test5');
INSERT INTO pk_table_gin VALUES (6, 'Test6');
CREATE TABLE fk_table_gin (
  a int[],
  b int,
  PRIMARY KEY (b),
  FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_gin
  ON DELETE NO ACTION ON UPDATE NO ACTION
);
-- create index on fk_table_gin
CREATE INDEX ON fk_table_gin USING gin (a array_ops);
INSERT INTO fk_table_gin VALUES ('{5}', 1);
INSERT INTO fk_table_gin VALUES ('{3,2}', 2);
INSERT INTO fk_table_gin VALUES ('{3,5,2,5}', 3);
INSERT INTO fk_table_gin VALUES ('{3,4,4}', 4);
INSERT INTO fk_table_gin VALUES ('{3,5,4,1,3}', 5);
INSERT INTO fk_table_gin VALUES ('{1}', 6);
INSERT INTO fk_table_gin VALUES ('{5,1}', 7);
INSERT INTO fk_table_gin VALUES ('{2,1,2,4,1}', 8);
INSERT INTO fk_table_gin VALUES ('{4,2}', 9);
INSERT INTO fk_table_gin VALUES ('{3,4,5,3}', 10);
-- try UPDATE
UPDATE pk_table_gin SET a=7 WHERE a=6;
-- try using the indexable operator
SELECT * FROM fk_table_gin WHERE a @>> 5;
      a      | b  
-------------+----
 {5}         |  1
 {3,5,2,5}   |  3
 {3,5,4,1,3} |  5
 {5,1}       |  7
 {3,4,5,3}   | 10
(5 rows)

DROP TABLE fk_table_gin;
DROP TABLE pk_table_gin;
--
-- invalid refrencing key tests
--
CREATE TABLE pk_table_violating (a int PRIMARY KEY, b text);
ERROR:  relation "pk_table_violating" already exists
-- attempt fk constraint between int <-> int
CREATE TABLE fk_table_violating (a int, FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
ERROR:  relation "fk_table_violating" already exists
-- attempt fk constraint between int <-> char[]
CREATE TABLE fk_table_violating (a char[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
ERROR:  relation "fk_table_violating" already exists
-- attempt fk constraint between int <-> char
CREATE TABLE fk_table_violating (a char, FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
ERROR:  relation "fk_table_violating" already exists
-- attempt fk constraint between int <-> smallint[]
CREATE TABLE fk_table_violating (a smallint[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
ERROR:  relation "fk_table_violating" already exists
-- attempt fk constraint between int <-> bigint[]
CREATE TABLE fk_table_violating (a bigint[], FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
ERROR:  relation "fk_table_violating" already exists
-- attempt fk constraint between int <-> int2vector
CREATE TABLE fk_table_violating (a int2vector, FOREIGN KEY (EACH ELEMENT OF a) REFERENCES pk_table_violating, b int);
ERROR:  relation "fk_table_violating" already exists
